name: "publish"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Extract node version
        id: extract_node_version
        uses: Saionaro/extract-package-version@v1.2.1

      - name: Get current rust app version from its Cargo.toml.
        id: extract_rust_version
        uses: colathro/crate-version@1.0.0
        with:
          file: "./src-tauri/Cargo.toml"
      
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: |
              aarch64-linux-android
              armv7-linux-androideabi
              i686-linux-android
              x86_64-linux-android
              x86_64-pc-windows-msvc
              x86_64-apple-darwin
              x86_64-apple-ios
              x86_64-unknown-linux-gnu
              aarch64-apple-ios 
              x86_64-apple-ios 
              aarch64-apple-ios-sim
      
      - name: Set up our JDK environment (android)
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/setup-java@v4
        with:
          java-version: 17 
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Android SDK
        if: matrix.platform == 'ubuntu-latest'
        uses: android-actions/setup-android@v3
        with:
          packages: 'tools platform-tools'
      - name: Install NDK
        if: matrix.platform == 'ubuntu-latest'
        run: sdkmanager "ndk;25.0.8775105"
      - name: Install Build Tools
        if: matrix.platform == 'ubuntu-latest'
        run: sdkmanager "build-tools;34.0.0"
        
      - name: Set up Android home environment variable
        if: matrix.platform == 'ubuntu-latest'
        run: echo "ANDROID_HOME=${HOME}/.android/sdk" >> $GITHUB_ENV
      - if: matrix.platform == 'ubuntu-latest'
        run: export ANDROID_HOME=${HOME}/.android/sdk
        
      - name: Set up NDK home environment variable
        if: matrix.platform == 'ubuntu-latest'
        run: echo "NDK_HOME=${ANDROID_SDK_ROOT}/ndk/25.0.8775105" >> $GITHUB_ENV
      - if: matrix.platform == 'ubuntu-latest'
        run: export NDK_HOME=${ANDROID_SDK_ROOT}/ndk/25.0.8775105

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf sqlite3 libsqlite3-dev javascriptcoregtk-4.1 libsoup-3.0 webkit2gtk-4.1

      - name: Install dependencies (macos only)
        if: matrix.platform == 'macos-latest'
        run: |
          brew upgrade
          brew install sqlite3

      - name: Install frontend dependencies
        run: npm install # change this to npm or pnpm depending on which one you use

      - name: Build (macos only)
        if: matrix.platform == 'macos-latest'
        run: |
          npm run tauri build --target=universal-apple-darwin

      - name: Create Release (macos only)
        uses: softprops/action-gh-release@v1
        if: matrix.platform == 'macos-latest'
        with:
          tag_name: Release_${{ steps.extract_node_version.outputs.version }}
          files: |
            /Users/runner/work/Banco-Horas-Metal/Banco-Horas-Metal/src-tauri/target/release/bundle/macos/banco-horas-metal.app
            /Users/runner/work/Banco-Horas-Metal/Banco-Horas-Metal/src-tauri/target/release/bundle/dmg/banco-horas-metal_${{ steps.extract_rust_version.outputs.version }}_x64.dmg
            
      - name: Build Android (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          rm -rf src-tauri/gen
          npm run tauri android init
          npm run tauri android build
      - name: Build (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          npm run tauri build --target=x86_64-unknown-linux-gnu

      - name: Create Release (ubuntu only)
        uses: softprops/action-gh-release@v1
        if: matrix.platform == 'ubuntu-latest'
        with:
          tag_name: Release_${{ steps.extract_node_version.outputs.version }}
          files: |
            /home/runner/work/Banco-Horas-Metal/Banco-Horas-Metal/src-tauri/target/release/bundle/deb/banco-horas-metal_${{ steps.extract_rust_version.outputs.version }}_amd64.deb
            /home/runner/work/Banco-Horas-Metal/Banco-Horas-Metal/src-tauri/target/release/bundle/rpm/banco-horas-metal-${{ steps.extract_rust_version.outputs.version }}-1.x86_64.rpm
            /home/runner/work/Banco-Horas-Metal/Banco-Horas-Metal/src-tauri/target/release/bundle/appimage/banco-horas-metal_${{ steps.extract_rust_version.outputs.version }}_amd64.AppImage
            /home/runner/work/Banco-Horas-Metal/Banco-Horas-Metal/src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned.apk
            /home/runner/work/Banco-Horas-Metal/Banco-Horas-Metal/src-tauri/gen/android/app/build/outputs/bundle/universalRelease/app-universal-release.aab
      - name: Build (windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          npm run tauri build --target=x86_64-pc-windows-msvc
      - name: Create Release (windows only)
        uses: softprops/action-gh-release@v1
        if: matrix.platform == 'windows-latest'
        with:
          tag_name: Release_${{ steps.extract_node_version.outputs.version }}
          files: |
            D:/a/Banco-Horas-Metal/Banco-Horas-Metal/src-tauri/target/release/bundle/msi/banco-horas-metal_${{ steps.extract_rust_version.outputs.version }}_x64_en-US.msi
            D:/a/Banco-Horas-Metal/Banco-Horas-Metal/src-tauri/target/release/bundle/nsis/banco-horas-metal_${{ steps.extract_rust_version.outputs.version }}_x64-setup.exe
          
      # - uses: tauri-apps/tauri-action@v0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
      #     releaseName: "App v__VERSION__"
      #     releaseBody: "See the assets to download this version and install."
      #     releaseDraft: true
      #     prerelease: false
