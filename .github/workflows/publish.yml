name: "publish"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.2.1

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "aarch64-linux-android, armv7-linux-androideabi, i686-linux-android, x86_64-linux-android, x86_64-pc-windows-msvc, x86_64-apple-darwin, x86_64-apple-ios, x86_64-unknown-linux-gnu"
      
      - name: Set up our JDK environment
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.8

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf sqlite3 libsqlite3-dev
          sudo apt-get install javascriptcoregtk-4.1 libsoup-3.0 webkit2gtk-4.1 -y

      - name: install dependencies (macos only)
        if: matrix.platform == 'macos-latest'
        run: |
          brew upgrade
          brew install sqlite3

      - name: install frontend dependencies
        run: npm install # change this to npm or pnpm depending on which one you use

      - name: Build (macos only)
        if: matrix.platform == 'macos-latest'
        run: |
          npm run tauri build --target=universal-apple-darwin
      - name: Create Release (macos only)
        uses: softprops/action-gh-release@v1
        if: matrix.platform == 'macos-latest'
        with:
          tag_name: Release_${{ steps.extract_version.outputs.version }}
          files: |
            ${{ github.workspace }}/src-tauri/target/release/bundle/macos/banco-horas-metal.app
            ${{ github.workspace }}/src-tauri/target/release/bundle/dmg/banco-horas-metal_0.0.0_x64.dmg
            
      - name: Build (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          npm run tauri build --target=x86_64-unknown-linux-gnu
      - name: Create Release (ubuntu only)
        uses: softprops/action-gh-release@v1
        if: matrix.platform == 'ubuntu-latest'
        with:
          tag_name: Release_${{ steps.extract_version.outputs.version }}
          files: |
            ${{ github.workspace }}/src-tauri/target/release/bundle/deb/banco-horas-metal_0.0.0_amd64.deb
            ${{ github.workspace }}/src-tauri/target/release/bundle/rpm/banco-horas-metal-0.0.0-1.x86_64.rpm
            ${{ github.workspace }}/src-tauri/target/release/bundle/appimage/banco-horas-metal_0.0.0_amd64.AppImage
          
      - name: Build (windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          npm run tauri build --target=x86_64-pc-windows-msvc
      - name: Create Release (windows only)
        uses: softprops/action-gh-release@v1
        if: matrix.platform == 'windows-latest'
        with:
          tag_name: Release_${{ steps.extract_version.outputs.version }}
          files: |
            ${${{ github.workspace }}//\//}/src-tauri/target/release/bundle/msi/banco-horas-metal_0.0.0_x64_en-US.msi
            ${${{ github.workspace }}//\//}/src-tauri/target/release/bundle/nsis/banco-horas-metal_0.0.0_x64-setup.exe
          
      # - uses: tauri-apps/tauri-action@v0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
      #     releaseName: "App v__VERSION__"
      #     releaseBody: "See the assets to download this version and install."
      #     releaseDraft: true
      #     prerelease: false
